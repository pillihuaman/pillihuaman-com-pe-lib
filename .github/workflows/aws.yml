name: Deploy Library to AWS CodeArtifact

on:
  push:
    branches:
      - main # O la rama que uses para tu librería

env:
  # --- Configuración de AWS (Apunta a tu NUEVA cuenta) ---
  AWS_REGION: us-east-1 # La región de tu CodeArtifact
  CODEARTIFACT_DOMAIN: pillihuamanlib
  CODEARTIFACT_OWNER_ID: 614520203803
  CODEARTIFACT_REPO_URL: https://pillihuamanlib-614520203803.d.codeartifact.us-east-1.amazonaws.com/maven/pillihuaman-com-pe-lib/

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure Maven settings.xml
        run: |
          # 1. Obtiene el token de autenticación para la NUEVA cuenta
          AUTH_TOKEN=$(aws codeartifact get-authorization-token \
            --domain ${{ env.CODEARTIFACT_DOMAIN }} \
            --domain-owner ${{ env.CODEARTIFACT_OWNER_ID }} \
            --query authorizationToken \
            --output text)
          
          # 2. Crea el archivo settings.xml para la publicación
          mkdir -p ~/.m2
          echo "<settings>\
            <servers>\
              <server>\
                <id>codeartifact</id>\
                <username>aws</username>\
                <password>${AUTH_TOKEN}</password>\
              </server>\
            </servers>\
          </settings>" > ~/.m2/settings.xml
          
          echo "✅ settings.xml for deployment configured."

      - name: Update pom.xml with new repository URL
        # Este paso es importante para que 'mvn deploy' sepa a dónde publicar
        run: |
          # Reemplaza la URL del distributionManagement en el pom.xml al vuelo
          sed -i 's|<url>.*</url>|<url>${{ env.CODEARTIFACT_REPO_URL }}</url>|g' pom.xml
          echo "✅ pom.xml updated for deployment."

      - name: Deploy artifact to CodeArtifact
        # Usamos el id 'codeartifact' que coincide con nuestro settings.xml
        run: mvn deploy -DrepositoryId=codeartifact